{"version":3,"sources":["helpers.js","containers/map.js","App.js","serviceWorker.js","index.js","containers/cell.js"],"names":["nestedArray","row","col","outerArray","i","innerArray","j","push","populateNestedArray","val","count","rows","length","cols","y","floorRand","x","valsAdjacentCounts","addOneNestedArrAdjacents","scale","Math","floor","random","iList","jList","_i","a","_i2","b","undefined","Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","theMap","react_default","createElement","map","item","key","className","subitem","cell","column","value","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Cell","_Users_john_yu_WorkProjects_minesweeper_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_john_yu_WorkProjects_minesweeper_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_john_yu_WorkProjects_minesweeper_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","clicked","e","flag","setState","_this$props","target","id","concat","rowList","colList","_loop","_loop2","setImmediate","click","preventDefault","_this$props2","cellsClass","classNames","bomb","react__WEBPACK_IMPORTED_MODULE_5___default","onClick","handleClick","bind","onContextMenu"],"mappings":"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","file":"static/js/main.bddf842d.chunk.js","sourcesContent":["export function nestedArray(row, col) {\n  let outerArray = [];\n  for (let i = 0; i < row; i++) {\n    let innerArray = [];\n    for (let j = 0; j < col; j++) {\n      innerArray.push(\"\");\n    }\n    outerArray.push(innerArray);\n  }\n  return outerArray;\n}\n\nexport function populateNestedArray(nestedArray, val, count) {\n  let rows = nestedArray.length;\n  let cols = nestedArray[0].length;\n  while (count) {\n    count--;\n    let y = floorRand(rows);\n    let x = floorRand(cols);\n    !nestedArray[y][x] ? (nestedArray[y][x] = val) : count++;\n  }\n  return nestedArray;\n}\n\nexport function valsAdjacentCounts(nestedArray, val) {\n  for (let i = 0; i < nestedArray.length; i++) {\n    for (let j = 0; j < nestedArray[0].length; j++) {\n      if (nestedArray[i][j] === val) {\n        nestedArray = addOneNestedArrAdjacents(nestedArray, i, j, val);\n      }\n    }\n  }\n  return nestedArray;\n}\n\nfunction floorRand(scale) {\n  return Math.floor(Math.random() * scale);\n}\n\nfunction addOneNestedArrAdjacents(nestedArray, i, j, val) {\n  let iList = [i - 1, i, i + 1];\n  let jList = [j - 1, j, j + 1];\n  for (let a of iList) {\n    for (let b of jList) {\n      if (nestedArray[a]) {\n        if (nestedArray[a][b] !== undefined) {\n          if (typeof nestedArray[a][b] != \"number\" && nestedArray[a][b] !== val)\n            nestedArray[a][b] = 0;\n          if (nestedArray[a][b] !== val) nestedArray[a][b]++;\n        }\n      }\n    }\n  }\n  return nestedArray;\n}\n\nchanceIt();\nfunction chanceIt(probability) {\n  return Math.random() > probability;\n}\n","import React, { Component } from \"react\";\nimport Cell from \"./cell\";\nimport {\n  nestedArray,\n  populateNestedArray,\n  valsAdjacentCounts\n} from \"../helpers\";\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      theMap: valsAdjacentCounts(\n        populateNestedArray(nestedArray(10, 10), \"☀\", 10),\n        \"☀\"\n      )\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <tbody>\n            {this.state.theMap.map((item, row) => {\n              return (\n                <tr key={row} className=\"mapRow\">\n                  {item.map((subitem, col) => {\n                    return (\n                      <Cell key={col} row={row} column={col} value={subitem} />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport Map from \"./containers/map\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <br />\n          <Map className=\"map\" />\n        </div>\n        <p>How to play minesweeper:</p>\n        <p>1) The goal of the game is to NOT click any bombs</p>\n        <p>\n          2) Each number tells you how many bombs are adjacent to the \"clicked\"\n          cell.\n        </p>\n        <p>\n          3) The numbers range from 0 to 8. Each cell has 8 neighbors. Count\n          them.\n        </p>\n        <p>4) Use process of elimination to choose where to click next.</p>\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { clicked: false };\n  }\n  handleClick(e) {\n    if (!this.state.flag) this.setState({ clicked: true });\n    let { row, column } = this.props;\n    if (this.props.value === \"\") {\n      e.target.id = `${row}_${column}_`;\n      let rowList = [row - 1, row, row + 1];\n      let colList = [column - 1, column, column + 1];\n      for (let i of rowList) {\n        for (let j of colList) {\n          if (\n            document.getElementById(`${i}_${j}`) &&\n            !(row === i && column === j)\n          ) {\n            setImmediate(() => {\n              if (document.getElementById(`${i}_${j}`))\n                document.getElementById(`${i}_${j}`).click();\n            });\n          }\n        }\n      }\n    }\n  }\n  onContextMenu(e) {\n    e.preventDefault();\n    if (!this.state.clicked) {\n      if (!this.state.flag) this.setState({ flag: \"⚑\" });\n      else this.setState({ flag: \"\" });\n    }\n  }\n  render() {\n    let { row, column } = this.props;\n    let cellsClass = classNames({\n      cell: true,\n      clicked: this.state.clicked,\n      bomb: this.props.value === \"☀\"\n    });\n    return (\n      <td\n        id={`${row}_${column}`}\n        className={cellsClass}\n        onClick={this.handleClick.bind(this)}\n        onContextMenu={this.onContextMenu.bind(this)}\n      >\n        {this.state.clicked && !this.state.flag ? this.props.value : \"\"}\n        {this.state.flag}\n      </td>\n    );\n  }\n}\n\nexport default Cell;\n"],"sourceRoot":""}