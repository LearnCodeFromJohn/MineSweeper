{"version":3,"sources":["actions.js","containers/cell.js","containers/map.js","App.js","serviceWorker.js","reducers/reducer_map.js","helpers.js","reducers/index.js","index.js"],"names":["LEFT_CLICK","RIGHT_CLICK","leftClick","type","payload","rightClick","Cell","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","clicked","flag","setState","e","preventDefault","cellsClass","classNames","cell","react_default","a","createElement","className","onClick","handleClick","bind","onContextMenu","value","Component","connect","dispatch","bindActionCreators","Map","theMap","map","item","row","key","subitem","col","column","_ref","console","log","App","Boolean","window","location","hostname","match","initialState","nestedArray","val","i","length","j","addOneNestedArrAdjacents","valsAdjacentCounts","count","rows","cols","y","floorRand","x","populateNestedArray","outerArray","innerArray","push","scale","Math","floor","random","iList","jList","_i","_i2","b","undefined","rootReducer","combineReducers","arguments","action","createStoreWithMiddleware","applyMiddleware","createStore","ReactDOM","render","es","store","reducers","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4QAAaA,EAAa,aACbC,EAAc,cAEpB,SAASC,IACd,MAAO,CACLC,KAAMH,EACNI,QAAS,IAIN,SAASC,IACd,MAAO,CACLF,KAAMF,EACNG,QAAS,yBCPPE,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,SAAS,GAFPR,6EAKZG,KAAKI,MAAME,MAAMN,KAAKO,SAAS,CAAEF,SAAS,0CAEnCG,GACZA,EAAEC,iBACGT,KAAKI,MAAMC,UACTL,KAAKI,MAAME,KACXN,KAAKO,SAAS,CAAED,KAAM,KADLN,KAAKO,SAAS,CAAED,KAAM,6CAK9C,IAAII,EAAaC,IAAW,CAC1BC,MAAM,EACNP,QAASL,KAAKI,MAAMC,UAEtB,OACEQ,EAAAC,EAAAC,cAAA,MACEC,UAAWN,EACXO,QAASjB,KAAKkB,YAAYC,KAAKnB,MAC/BoB,cAAepB,KAAKoB,cAAcD,KAAKnB,OAEtCA,KAAKI,MAAMC,UAAYL,KAAKI,MAAME,KAAON,KAAKJ,MAAMyB,MAAQ,GAC5DrB,KAAKI,MAAME,aA3BDgB,aAqCJC,kBACb,KALF,SAA4BC,GAC1B,OAAOC,YAAmB,CAAE/B,aAAYH,aAAaiC,IAGxCD,CAGb5B,GCxCI+B,cACJ,SAAAA,EAAY9B,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAA0B,GAAA5B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4B,GAAAvB,KAAAH,KACZJ,0EAIN,OACEiB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACGf,KAAKJ,MAAM+B,OAAOC,IAAI,SAACC,EAAMC,GAC5B,OACEjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,EAAKd,UAAU,UACrBa,EAAKD,IAAI,SAACI,EAASC,GAClB,OACEpB,EAAAC,EAAAC,cAACH,EAAD,CAAMmB,IAAKE,EAAKH,IAAKA,EAAKI,OAAQD,EAAKZ,MAAOW,mBAflDV,aAqCHC,kBATf,SAAAY,GAAqC,IAAVR,EAAUQ,EAAVR,OAEzB,OADAS,QAAQC,IAAIV,EAAQ,OACb,CAAEA,WAGX,SAA4BH,GAC1B,OAAOC,YAAmB,GAAID,IAGjBD,CAGbG,GClBaY,0LAtBX,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAACa,EAAD,CAAKZ,UAAU,SAEjBH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,6DACAF,EAAAC,EAAAC,cAAA,uFAIAF,EAAAC,EAAAC,cAAA,oFAIAF,EAAAC,EAAAC,cAAA,iFAlBUO,cCQEiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCdN,IAAIC,EAsBJ,SAA4BC,EAAaC,GACvC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IACtC,IAAK,IAAIE,EAAI,EAAGA,EAAIJ,EAAY,GAAGG,OAAQC,IACrCJ,EAAYE,GAAGE,KAAOH,IACxBD,EAAcK,EAAyBL,EAAaE,EAAGE,EAAGH,IAIhE,OAAOD,EA9BUM,CAUnB,SAA6BN,EAAaC,EAAKM,GAC7C,IAAIC,EAAOR,EAAYG,OACnBM,EAAOT,EAAY,GAAGG,OAC1B,KAAOI,GAAO,CACZA,IACA,IAAIG,EAAIC,EAAUH,GACdI,EAAID,EAAUF,GACjBT,EAAYU,GAAGE,GAAiCL,IAA3BP,EAAYU,GAAGE,GAAKX,EAE5C,OAAOD,EAlBPa,CCLK,SAAqB5B,EAAKG,GAE/B,IADA,IAAI0B,EAAa,GACRZ,EAAI,EAAGA,EAAIjB,EAAKiB,IAAK,CAE5B,IADA,IAAIa,EAAa,GACRX,EAAI,EAAGA,EAAIhB,EAAKgB,IACvBW,EAAWC,KAAK,IAElBF,EAAWE,KAAKD,GAElB,OAAOD,EDJad,CAAY,GAAI,IAAK,SAAK,IAC9C,UA+BF,SAASW,EAAUM,GACjB,OAAOC,KAAKC,MAAMD,KAAKE,SAAWH,GAGpC,SAASZ,EAAyBL,EAAaE,EAAGE,EAAGH,GAGnD,IAFA,IAAIoB,EAAQ,CAACnB,EAAI,EAAGA,EAAGA,EAAI,GACvBoB,EAAQ,CAAClB,EAAI,EAAGA,EAAGA,EAAI,GAC3BmB,EAAA,EAAAA,EAAcF,EAAdlB,OAAAoB,IACE,IADG,IAAItD,EAAKoD,EAAJE,GACRC,EAAA,EAAAA,EAAcF,EAAdnB,OAAAqB,IAAqB,CAAhB,IAAIC,EAAKH,EAAJE,GACJxB,EAAY/B,SACYyD,IAAtB1B,EAAY/B,GAAGwD,KACe,iBAArBzB,EAAY/B,GAAGwD,IAAkBzB,EAAY/B,GAAGwD,KAAOxB,IAChED,EAAY/B,GAAGwD,GAAK,GAClBzB,EAAY/B,GAAGwD,KAAOxB,GAAKD,EAAY/B,GAAGwD,MAKtD,OAAOzB,EEpDT,IAIe2B,EAJKC,YAAgB,CAClC9C,OFKa,WAAuC,IAA9BvB,EAA8BsE,UAAA1B,OAAA,QAAAuB,IAAAG,UAAA,GAAAA,UAAA,GAAtB9B,EAAc+B,EAAQD,UAAA1B,OAAA,EAAA0B,UAAA,QAAAH,EACpD,OAAII,EAAOlF,QAAgBkF,EAAOlF,QAC3BW,KGDHwE,EAA4BC,cAAkBC,KAEpDC,IAASC,OACPnE,EAAAC,EAAAC,cAACkE,EAAA,EAAD,CAAUC,MAAON,EAA0BO,IACzCtE,EAAAC,EAAAC,cAACqE,EAAD,OAEFC,SAASC,eAAe,SJiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e28ee0d3.chunk.js","sourcesContent":["export const LEFT_CLICK = \"LEFT_CLICK\";\nexport const RIGHT_CLICK = \"RIGHT_CLICK\";\n\nexport function leftClick() {\n  return {\n    type: LEFT_CLICK,\n    payload: []\n  };\n}\n\nexport function rightClick() {\n  return {\n    type: RIGHT_CLICK,\n    payload: []\n  };\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { rightClick, leftClick } from \"../actions\";\nimport classNames from \"classnames\";\n\nclass Cell extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { clicked: false };\n  }\n  handleClick() {\n    if (!this.state.flag) this.setState({ clicked: true });\n  }\n  onContextMenu(e) {\n    e.preventDefault();\n    if (!this.state.clicked) {\n      if (!this.state.flag) this.setState({ flag: \"âš‘\" });\n      else this.setState({ flag: \"\" });\n    }\n  }\n  render() {\n    let cellsClass = classNames({\n      cell: true,\n      clicked: this.state.clicked\n    });\n    return (\n      <td\n        className={cellsClass}\n        onClick={this.handleClick.bind(this)}\n        onContextMenu={this.onContextMenu.bind(this)}\n      >\n        {this.state.clicked && !this.state.flag ? this.props.value : \"\"}\n        {this.state.flag}\n      </td>\n    );\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ rightClick, leftClick }, dispatch);\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Cell);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport {} from \"../actions\";\nimport Cell from \"./cell\";\n\nclass Map extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <tbody>\n            {this.props.theMap.map((item, row) => {\n              return (\n                <tr key={row} className=\"mapRow\">\n                  {item.map((subitem, col) => {\n                    return (\n                      <Cell key={col} row={row} column={col} value={subitem} />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ theMap }) {\n  console.log(theMap, \"MAP\");\n  return { theMap };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({}, dispatch);\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Map);\n","import React, { Component } from \"react\";\nimport Map from \"./containers/map\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"App\">\n          <h1>MineSweeper</h1>\n          <Map className=\"map\" />\n        </div>\n        <p>Hpw to play minesweeper:</p>\n        <p>1)The goal of the game is to NOT click any bombs</p>\n        <p>\n          2)Each number tells you how many bombs are adjacent to the \" clicked\"\n          cell\n        </p>\n        <p>\n          3)The numbers range from 0 to 8. Each cell has 8 neighbors. Count\n          them.\n        </p>\n        <p>4) Use process of elimination to choose where to click next.</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport { LEFT_CLICK, RIGHT_CLICK } from \"../actions\";\nimport { nestedArray } from \"../helpers\";\n\nlet initialState = valsAdjacentCounts(\n  populateNestedArray(nestedArray(10, 10), \"â˜€\", 10),\n  \"â˜€\"\n);\n\nexport default function(state = initialState, action) {\n  if (action.payload) return action.payload;\n  return state;\n}\n\nfunction populateNestedArray(nestedArray, val, count) {\n  let rows = nestedArray.length;\n  let cols = nestedArray[0].length;\n  while (count) {\n    count--;\n    let y = floorRand(rows);\n    let x = floorRand(cols);\n    !nestedArray[y][x] ? (nestedArray[y][x] = val) : count++;\n  }\n  return nestedArray;\n}\n\nfunction valsAdjacentCounts(nestedArray, val) {\n  for (let i = 0; i < nestedArray.length; i++) {\n    for (let j = 0; j < nestedArray[0].length; j++) {\n      if (nestedArray[i][j] === val) {\n        nestedArray = addOneNestedArrAdjacents(nestedArray, i, j, val);\n      }\n    }\n  }\n  return nestedArray;\n}\n\nfunction floorRand(scale) {\n  return Math.floor(Math.random() * scale);\n}\n\nfunction addOneNestedArrAdjacents(nestedArray, i, j, val) {\n  let iList = [i - 1, i, i + 1];\n  let jList = [j - 1, j, j + 1];\n  for (let a of iList) {\n    for (let b of jList) {\n      if (nestedArray[a]) {\n        if (nestedArray[a][b] !== undefined) {\n          if (typeof nestedArray[a][b] != \"number\" && nestedArray[a][b] !== val)\n            nestedArray[a][b] = 0;\n          if (nestedArray[a][b] !== val) nestedArray[a][b]++;\n        }\n      }\n    }\n  }\n  return nestedArray;\n}\n","export function nestedArray(row, col) {\n  let outerArray = [];\n  for (let i = 0; i < row; i++) {\n    let innerArray = [];\n    for (let j = 0; j < col; j++) {\n      innerArray.push(\"\");\n    }\n    outerArray.push(innerArray);\n  }\n  return outerArray;\n}\n","import { combineReducers } from \"redux\";\nimport mapReducer from \"./reducer_map\";\n\nconst rootReducer = combineReducers({\n  theMap: mapReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducers from \"./reducers\";\n\nconst createStoreWithMiddleware = applyMiddleware()(createStore);\n\nReactDOM.render(\n  <Provider store={createStoreWithMiddleware(reducers)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}