{"version":3,"sources":["helpers.js","containers/map.js","App.js","serviceWorker.js","index.js","containers/cell.js"],"names":["nestedArray","row","col","outerArray","i","innerArray","j","push","populateNestedArray","val","count","rows","length","cols","y","floorRand","x","valsAdjacentCounts","addOneNestedArrAdjacents","iList","jList","_i","a","_i2","b","undefined","scale","Math","floor","random","Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","mapSize","bombCount","theMap","cellsClicked","_this$state","safeCells","setState","alert","_this2","react_default","createElement","map","item","key","className","subitem","cell","column","value","handleCellsClicked","bind","Component","App","style","width","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","endMineSweeperGame","Cell","_Users_john_yu_2019_MineSweeper_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_john_yu_2019_MineSweeper_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_john_yu_2019_MineSweeper_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","clicked","flag","target","_ref","_this$props","id","concat","rowList","colList","_loop","_loop2","setImmediate","click","backgroundColor","parentElement","children","e","preventDefault","_this$props2","cellsClass","classNames","bomb","react__WEBPACK_IMPORTED_MODULE_5___default","onClick","handleClick","onContextMenu","handleContextMenu"],"mappings":"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","file":"static/js/main.2dff59b5.chunk.js","sourcesContent":["// @flow\n\nexport function nestedArray(row: number, col: number) {\n  let outerArray: Array<Array<number | string>> = [];\n  for (let i = 0; i < row; i++) {\n    let innerArray: Array<number | string> = [];\n    for (let j = 0; j < col; j++) {\n      innerArray.push(\"\");\n    }\n    outerArray.push(innerArray);\n  }\n  return outerArray;\n}\nexport function populateNestedArray(\n  nestedArray: Array<Array<number | string>>,\n  val: string | number,\n  count: number\n) {\n  let rows = nestedArray.length;\n  let cols = nestedArray[0].length;\n  while (count) {\n    let y = floorRand(rows);\n    let x = floorRand(cols);\n    if (!nestedArray[y][x]) {\n      nestedArray[y][x] = val;\n      count--;\n    }\n  }\n  return nestedArray;\n}\nexport function valsAdjacentCounts(\n  nestedArray: Array<Array<number | string>>,\n  val: string | number\n) {\n  for (let i = 0; i < nestedArray.length; i++) {\n    for (let j = 0; j < nestedArray[0].length; j++) {\n      if (nestedArray[i][j] === val) {\n        nestedArray = addOneNestedArrAdjacents(nestedArray, i, j, val);\n      }\n    }\n  }\n  return nestedArray;\n}\n\nfunction addOneNestedArrAdjacents(\n  nestedArray: Array<Array<number | string>>,\n  i: number,\n  j: number,\n  val: string | number\n) {\n  let iList = [i - 1, i, i + 1];\n  let jList = [j - 1, j, j + 1];\n  for (let a of iList) {\n    if (nestedArray[a]) {\n      for (let b of jList) {\n        if (nestedArray[a][b] !== undefined && nestedArray[a][b] !== val) {\n          if (typeof nestedArray[a][b] !== \"number\") nestedArray[a][b] = 0;\n          nestedArray[a][b]++;\n        }\n      }\n    }\n  }\n  return nestedArray;\n}\nfunction floorRand(scale: number) {\n  return Math.floor(Math.random() * scale);\n}\n","// @flow\n\nimport React, { Component } from \"react\";\nimport Cell from \"./cell\";\nimport {\n  nestedArray,\n  populateNestedArray,\n  valsAdjacentCounts\n} from \"../helpers\";\n\ntype Props = {};\ntype State = {\n  mapSize: number,\n  bombCount: number,\n  theMap: Array<Array<number | string>>,\n  cellsClicked: number\n};\n\nclass Map extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    let mapSize = 10;\n    let bombCount = 10;\n    this.state = {\n      mapSize,\n      bombCount,\n      theMap: valsAdjacentCounts(\n        populateNestedArray(nestedArray(mapSize, mapSize), \"☀\", bombCount),\n        \"☀\"\n      ),\n      cellsClicked: 1\n    };\n  }\n\n  handleCellsClicked() {\n    let { mapSize, bombCount, cellsClicked } = this.state;\n    let safeCells = mapSize * mapSize - bombCount;\n    this.setState({\n      cellsClicked: cellsClicked + 1\n    });\n    if (cellsClicked >= safeCells) alert(\"☀☀☀ You have won! ☀☀☀\");\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <tbody>\n            {this.state.theMap.map((item, row) => {\n              return (\n                <tr key={row} className=\"mapRow\">\n                  {item.map((subitem, col) => {\n                    return (\n                      <Cell\n                        key={col}\n                        row={row}\n                        column={col}\n                        value={subitem}\n                        cellsClicked={this.handleCellsClicked.bind(this)}\n                      />\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport Map from \"./containers/map\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    const widthStyle = {\n      width: \"800px\"\n    };\n    return (\n      <div style={widthStyle}>\n        <div className=\"App\">\n          <br />\n          <Map className=\"map\" />\n        </div>\n        <p>\n          <a href=\"https://www.facebook.com/Learn-to-think-like-a-dev-542566672900463\">\n            Learn to Think like a Dev\n          </a>\n        </p>\n        <p>How to play minesweeper: (Play on Chrome)</p>\n        <p>1) The goal of the game is to NOT click any bombs</p>\n        <p>\n          2) Each number tells you how many bombs are adjacent to the \"clicked\"\n          cell.\n        </p>\n        <p>\n          3) The numbers range from 0 to 8. Each cell has 8 neighbors. Count\n          them.\n        </p>\n        <p>4) Use process of elimination to choose where to click next.</p>\n        <br />\n        <br />\n        <br />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// @flow__ <---Ignoring>\n\nimport React, { Component } from \"react\";\nimport classNames from \"classnames\";\n\ntype Props = {\n  row: number,\n  column: number,\n  value: string | number,\n  cellsClicked: Function\n};\ntype State = {\n  clicked: boolean,\n  flag: string\n};\nlet endMineSweeperGame = false;\n\nclass Cell extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { clicked: false, flag: \"\" };\n  }\n  handleClick({ target }: SyntheticMouseEvent<>) {\n    let { row, column, cellsClicked } = this.props;\n    if (!this.state.flag) this.setState({ clicked: true });\n    if (!this.state.clicked) cellsClicked();\n    if (!endMineSweeperGame) {\n      //recursion cases\n      if (this.props.value === \"\" && target.id === `${row}_${column}`) {\n        target.id = `${row}_${column}_`;\n        let rowList = [row - 1, row, row + 1];\n        let colList = [column - 1, column, column + 1];\n        for (let i of rowList) {\n          for (let j of colList) {\n            setImmediate(() => {\n              if (document.getElementById(`${i}_${j}`))\n                document.getElementById(`${i}_${j}`).click();\n            });\n          }\n        }\n      }\n      //click bomb scenario --> end game\n      if (this.props.value === \"☀\" && !this.state.flag) {\n        endMineSweeperGame = true;\n        target.style.backgroundColor = \"black\";\n        let cols = target.parentElement.children.length;\n        let rows = target.parentElement.parentElement.children.length;\n        for (let i = 0; i < rows; i++) {\n          for (let j = 0; j < cols; j++) {\n            if (document.getElementById(`${i}_${j}`))\n              document.getElementById(`${i}_${j}`).click();\n          }\n        }\n      }\n    }\n  }\n  handleContextMenu(e: SyntheticMouseEvent<>) {\n    e.preventDefault();\n    if (!this.state.clicked) {\n      this.state.flag\n        ? this.setState({ flag: \"\" })\n        : this.setState({ flag: \"⚑\" });\n    }\n  }\n  render() {\n    let { row, column } = this.props;\n    let cellsClass = classNames({\n      cell: true,\n      clicked: this.state.clicked,\n      bomb: this.props.value === \"☀\"\n    });\n    return (\n      <td\n        id={`${row}_${column}`}\n        className={cellsClass}\n        onClick={this.handleClick.bind(this)}\n        onContextMenu={this.handleContextMenu.bind(this)}\n      >\n        {this.state.clicked && !this.state.flag ? this.props.value : \"\"}\n        {this.state.flag}\n      </td>\n    );\n  }\n}\n\nexport default Cell;\n"],"sourceRoot":""}